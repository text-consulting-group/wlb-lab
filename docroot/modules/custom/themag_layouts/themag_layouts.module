<?php

/**
 * @file
 * Contains cube_layout.module.
 */

use Drupal\Core\Template\Attribute;


/**
 * Implements hook_preprocess_layout().
 */
function themag_layouts_preprocess_layout(&$variables) {

  //  Check if the layout comes from this module.
  $is_themag_layout = in_array('themag_layout', explode('__', $variables['content']['#layout']->getThemeHook()));

  if($is_themag_layout) {

    // Add element to wrap region content.
    // This is useful when you use layout with sticky columns.
    foreach ($variables['content']['#layout']->getRegionNames() as $regionName) {
      $variables['content'][$regionName]['#prefix'] = '<div class=w"themag-layout__region-content themag-layout__region-content--'. $regionName .'">';
      $variables['content'][$regionName]['#suffix'] = '</div>';
    }

    // Add attributes to the container element.
    if(isset($variables['content']['#container_attributes'])) {
      $variables['container_attributes'] = new Attribute($variables['content']['#container_attributes']);
    }

    // Add attributes to the row element.
    if(isset($variables['content']['#row_attributes'])) {
      $variables['row_attributes'] = new Attribute($variables['content']['#row_attributes']);
    }

    // Add attributes to regions
    if(isset($variables['content']['#region_attributes'])) {
      foreach ($variables['content']['#region_attributes'] as $key=>$value) {
        if(isset($variables['region_attributes'][$key]) && $variables['region_attributes'][$key] instanceof Attribute) {
          $variables['region_attributes'][$key]->addClass($value['class']);
        }
      }
    }
  }
}


/**
 * Implements hook_layout_alter().
 */
function themag_layouts_layout_alter(&$definitions) {
  $config = Drupal::config('themag_layouts.configuration');

  $layout_discovery_layouts = [
    'layout_onecol',
    'layout_twocol',
    'layout_twocol_bricks',
    'layout_threecol_25_50_25',
    'layout_threecol_33_34_33',
  ];

  $layout_builder_layouts = [
    'layout_twocol_section',
    'layout_threecol_section',
    'layout_fourcol_section',
  ];

  // Add default Drupal layouts in a same category.
  $drupal_default_layouts = array_merge($layout_discovery_layouts, $layout_builder_layouts);
  foreach ($drupal_default_layouts as $drupal_default_layout) {
    $definitions[$drupal_default_layout]->setCategory('Drupal');
  }
}


/**
 * Implements hook_plugin_filter_TYPE__CONSUMER_alter.
 */
function themag_layouts_plugin_filter_layout__layout_builder_alter(&$definitions) {
  $config = Drupal::config('themag_layouts.configuration');

  $themag_not_config_layouts = [
    'layout_a',
    'page_1',
    'page_2',
    'page_3',
    'article_1',
    'article_2',
    'article_3',
  ];

  $layout_discovery_layouts = [
    'layout_onecol',
    'layout_twocol',
    'layout_twocol_bricks',
    'layout_threecol_25_50_25',
    'layout_threecol_33_34_33',
  ];

  $layout_builder_layouts = [
    'layout_twocol_section',
    'layout_threecol_section',
    'layout_fourcol_section',
  ];

  // Remove TheMAG not-configurable layouts from the off-canvas
  // navigations under Layout Builder.
  if($config->get('hide_themag_not_configurable_layouts')) {
    foreach ($themag_not_config_layouts as $themag_layout) {
      if(isset($definitions[$themag_layout])) {
        unset($definitions[$themag_layout]);
      }
    }
  }

  // Remove Default Drupal layouts from the off-canvas
  // navigations under Layout Builder.
  if($config->get('hide_default_drupal_layouts')) {
    $drupal_default_layouts = array_merge($layout_discovery_layouts, $layout_builder_layouts);
    foreach ($drupal_default_layouts as $drupal_default_layout) {
      if (isset($definitions[$drupal_default_layout])) {
        unset($definitions[$drupal_default_layout]);
      }
    }
  }
}


/**
 * Implements hook_page_attachments().
 */
function themag_layouts_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'themag_layouts/themag_layout_builder';
}
